syntax = "proto3";
package umee.ibctransfer.v1;

import "google/api/annotations.proto";
import "gogoproto/gogo.proto";
import "umee/ibctransfer/v1/ibc_rate_limit.proto";

option go_package = "github.com/umee-network/umee/v3/x/ibctransfer";

option (gogoproto.goproto_getters_all) = false;

// Query defines the gRPC querier service.
service Query {
  // Params queries the parameters of the x/ibc-rate-limit module.
  rpc Params(QueryParams) returns (QueryParamsResponse) {
    option (google.api.http).get = "/umee/ibctransfer/v1/params";
  }

  // RateLimitsOfIBCDenoms queries the rate limits of ibc denoms.
  rpc RateLimitsOfIBCDenoms(QueryRateLimitsOfIBCDenoms) returns (QueryRateLimitsOfIBCDenomsResponse) {
    option (google.api.http).get = "/umee/ibctransfer/v1/rate_limits/{ibc_denom}";
  }
}

// QueryParams defines the request structure for the Params gRPC service
// handler.
message QueryParams {}

// QueryParamsResponse defines the response structure for the Params gRPC
// service handler.
message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryRateLimitsOfIBCDenoms defines request type
message QueryRateLimitsOfIBCDenoms {
  string ibc_denom = 1;
}

// QueryRateLimitsOfIBCDenomsResponse defines response type
message QueryRateLimitsOfIBCDenomsResponse {
  repeated RateLimit rate_limits = 1 [(gogoproto.nullable) = false];
}
